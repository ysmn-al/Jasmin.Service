@using Jasmin.Service.Services
@using System.Security.Claims
@inject NavigationManager Navigation
@inject AuthenticationStateProviderService AuthenticationStateProviderService

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="flex-column">
        <div class="nav justify-content-center text-center">
            <div class="icon-container">
                <img src="images/icon.webp" alt="Icon" class="rounded-circle" width="100" height="100" />
            </div>
            <p class="mt-2">@fullName</p> <!-- Подпись под изображением -->
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Справка
            </NavLink>
        </div>
        @if (isAdmin)
        {
            <div class="nav-item px-3" @onclick="ToggleDropdown">
                <NavLink class="nav-link">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Администрирование
                </NavLink>
            </div>

            @if (isOpen)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="user">
                        <span class="bi" aria-hidden="true"></span> Пользователи
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="edit">
                        <span class="bi" aria-hidden="true"></span> Нагрузка кафедры
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="guideHourForAdmin">
                        <span class="bi" aria-hidden="true"></span> Часы руководства
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="actualLoadforAdmin">
                        <span class="bi" aria-hidden="true"></span> Итоговые таблицы
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="data">
                        <span class="bi" aria-hidden="true"></span> Импорт данных
                    </NavLink>
                </div>
                
            }
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="selfLoad">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Расчет нагрузки
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="actualLoad">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Текущая нагрузка
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="updatePwd">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Сменить пароль
            </NavLink>
        </div>

        <ul class="nav justify-content-center">
            <li class="nav-item">
                <button @onclick="HandleLogout">Выйти</button>
            </li>
        </ul>
    </nav>
</div>

@code {
    private bool isOpen = false;
    private bool isAdmin;
    private ClaimsPrincipal currentUser;
    private string fullName;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProviderService.GetAuthenticationStateAsync();
        currentUser = authState.User;

        // Проверяем, есть ли Claims и соответствует ли Post = 1
        if (currentUser.Identity.IsAuthenticated)
        {
            var surname = currentUser.FindFirst("Surname")?.Value;
            var name = currentUser.FindFirst("Name")?.Value;
            var patronymic = currentUser.FindFirst("Patronymic")?.Value;

            fullName = $"{surname} {name} {patronymic}".Trim();

            var postClaim = currentUser.FindFirst("Post");
            if (postClaim != null && postClaim.Value == "1")
            {
                isAdmin = true; // Пользователь является администратором
            }
        }

    }

    private void ToggleDropdown()
    {
        isOpen = !isOpen;
    }

    private void HandleLogout()
    {
        AuthenticationStateProviderService.Logout();
        Navigation.NavigateTo("/login");
    }
}