@using Jasmin.Common.Dto.Output
@code {
    [Parameter] public PlannedLoadDto PlannedLoad { get; set; }
    [Parameter] public EventCallback<PlannedLoadDto> OnSave { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public bool IsVisible { get; set; } // Add this line

    private PlannedLoadDto editedLoad;

    protected override void OnParametersSet()
    {
        editedLoad = new PlannedLoadDto
            {
                Id = PlannedLoad.Id,
                SubjectId = PlannedLoad.SubjectId,
                SubjectName = PlannedLoad.SubjectName,
                YearId = PlannedLoad.YearId,
                Semester = PlannedLoad.Semester,
                UnitId = PlannedLoad.UnitId,
                UnitName = PlannedLoad.UnitName,
                Lecture = PlannedLoad.Lecture,
                Lesson = PlannedLoad.Lesson,
                Labwork = PlannedLoad.Labwork,
                Coursework = PlannedLoad.Coursework,
                CourseProject = PlannedLoad.CourseProject,
                Сonsultation = PlannedLoad.Сonsultation,
                Rating = PlannedLoad.Rating,
                Credit = PlannedLoad.Credit,
                Exam = PlannedLoad.Exam,
                Practice = PlannedLoad.Practice
            };
    }

    private async Task Save()
    {
        await OnSave.InvokeAsync(editedLoad);
        await OnCancel.InvokeAsync();
    }
}

<div style="display: @(IsVisible ? "block" : "none")">
    <div class="modal-content">
        <span class="close" @onclick="() => OnCancel.InvokeAsync()">&times;</span>
        <h2>Редактировать нагрузку</h2>
        <input type="number" @bind="editedLoad.Lecture" placeholder="Л" />
        <input type="number" @bind="editedLoad.Lesson" placeholder="ПЗ" />
        <input type="number" @bind="editedLoad.Labwork" placeholder="ЛР" />
        <input type="number" @bind="editedLoad.Coursework" placeholder="КР" />
        <input type="number" @bind="editedLoad.CourseProject" placeholder="КП" />
        <input type="number" @bind="editedLoad.Сonsultation" placeholder="Консультация" />
        <input type="number" @bind="editedLoad.Rating" placeholder="Рейтинг" />
        <input type="number" @bind="editedLoad.Credit" placeholder="Зачет" />
        <input type="number" @bind="editedLoad.Exam" placeholder="Экзамен" />
        <input type="number" @bind="editedLoad.Practice" placeholder="Практика" />
        <button @onclick="Save">Сохранить</button>
        <button @onclick="() => OnCancel.InvokeAsync()">Отмена</button>
    </div>
</div>

<style>
    .modal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex; /* Используем flexbox для центрирования */
        justify-content: center; /* Центрируем по горизонтали */
        align-items: center; /* Центрируем по вертикали */
        z-index: 1050; /* Убедитесь, что это значение выше, чем у фона */
    }

    .modal-content {
        background-color: #fefefe;
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Ширина */
        max-width: 600px; /* Максимальная ширина для лучшего отображения */
        border-radius: 5px; /* Закругленные углы */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Тень для лучшего визуального эффекта */
    }

    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
</style>